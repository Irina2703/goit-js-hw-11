{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '50859132-8d9ad7116e4a90f08d2e16751';\n\nexport const PER_PAGE = 15;\n\nexport async function getImagesByQuery(query, page = 1) {\n    const params = {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page,\n        per_page: PER_PAGE,\n    };\n\n    const { data } = await axios.get(BASE_URL, { params });\n    return data;\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\nconst moreButton = document.querySelector('.more-button');\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n    captionsData: 'alt',\n    captionDelay: 250,\n});\n\n\nexport function createGallery(images) {\n    const markup = images\n        .map(\n            ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n      <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${largeImageURL}\">\n          <img src=\"${webformatURL}\" alt=\"${tags}\" width=\"360\" height=\"200\" loading=\"lazy\" />\n        </a>\n        <ul class=\"info\">\n          <li class=\"info-item\"><span class=\"info-label\">Likes</span><span class=\"info-value\">${likes}</span></li>\n          <li class=\"info-item\"><span class=\"info-label\">Views</span><span class=\"info-value\">${views}</span></li>\n          <li class=\"info-item\"><span class=\"info-label\">Comments</span><span class=\"info-value\">${comments}</span></li>\n          <li class=\"info-item\"><span class=\"info-label\">Downloads</span><span class=\"info-value\">${downloads}</span></li>\n        </ul>\n      </li>`\n        )\n        .join('');\n\n    gallery.insertAdjacentHTML('beforeend', markup);\n    lightbox.refresh();\n}\n\nexport function clearGallery() {\n    gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n    loader.classList.remove('is-hidden');\n}\n\nexport function hideLoader() {\n    loader.classList.add('is-hidden');\n}\n\nexport function showLoadMoreButton() {\n    moreButton.style.display = 'block';\n}\n\nexport function hideLoadMoreButton() {\n    moreButton.style.display = 'none';\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { getImagesByQuery } from './js/pixabay-api';\n\nimport {\n    createGallery,\n    clearGallery,\n    showLoader,\n    hideLoader,\n} from './js/render-functions';\n\ndocument.querySelector('.form').addEventListener('submit', async e => {\n    e.preventDefault();\n\n    let searchText = '';\n\n    const messageData = {\n        title: '',\n        titleColor: 'red',\n        position: 'topRight',\n    };\n\n    const userQuerry = e.target.elements['search-text'].value.trim();\n\n    if (userQuerry !== '') {\n        searchText = userQuerry;\n        clearGallery();\n        showLoader();\n\n        try {\n            const images = await getImagesByQuery(searchText);\n            const imgArr = images.hits;\n\n            if (imgArr.length !== 0) {\n                createGallery(imgArr);\n            } else {\n                messageData.title =\n                    'Sorry, there are no images matching your search query. Please try again!';\n                iziToast.show(messageData);\n            }\n        } catch (error) {\n            messageData.title =\n                'An error occurred while fetching images. Please try again later.';\n            iziToast.show(messageData);\n            console.error('Fetch error:', error);\n        } finally {\n            hideLoader();\n        }\n    } else {\n        messageData.title = 'Form field must be filled in!';\n        iziToast.show(messageData);\n    }\n\n    e.target.reset();\n});"],"names":["BASE_URL","API_KEY","PER_PAGE","getImagesByQuery","query","page","params","data","axios","gallery","loader","lightbox","SimpleLightbox","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","hideLoader","e","searchText","messageData","userQuerry","imgArr","iziToast","error"],"mappings":"owBAEA,MAAMA,EAAW,2BACXC,EAAU,qCAEHC,EAAW,GAEjB,eAAeC,EAAiBC,EAAOC,EAAO,EAAG,CACpD,MAAMC,EAAS,CACX,IAAKL,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAAC,EACA,SAAUH,CAClB,EAEU,CAAE,KAAAK,CAAM,EAAG,MAAMC,EAAM,IAAIR,EAAU,CAAE,OAAAM,CAAM,CAAE,EACrD,OAAOC,CACX,CCjBA,MAAME,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAC5B,SAAS,cAAc,cAAc,EAExD,MAAMC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAClB,CAAC,EAGM,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAASD,EACV,IACG,CAAC,CAAE,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,wCAElDL,CAAa;AAAA,sBAC/BD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,gGAGgDC,CAAK;AAAA,gGACLC,CAAK;AAAA,mGACFC,CAAQ;AAAA,oGACPC,CAAS;AAAA;AAAA,YAGpG,EACA,KAAK,EAAE,EAEZb,EAAQ,mBAAmB,YAAaM,CAAM,EAC9CJ,EAAS,QAAO,CACpB,CAEO,SAASY,GAAe,CAC3Bd,EAAQ,UAAY,EACxB,CAEO,SAASe,GAAa,CACzBd,EAAO,UAAU,OAAO,WAAW,CACvC,CAEO,SAASe,GAAa,CACzBf,EAAO,UAAU,IAAI,WAAW,CACpC,CClCA,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,MAAMgB,GAAK,CAClEA,EAAE,eAAc,EAEhB,IAAIC,EAAa,GAEjB,MAAMC,EAAc,CAChB,MAAO,GACP,WAAY,MACZ,SAAU,UAClB,EAEUC,EAAaH,EAAE,OAAO,SAAS,aAAa,EAAE,MAAM,OAE1D,GAAIG,IAAe,GAAI,CACnBF,EAAaE,EACbN,IACAC,IAEA,GAAI,CAEA,MAAMM,GADS,MAAM3B,EAAiBwB,CAAU,GAC1B,KAElBG,EAAO,SAAW,EAClBjB,EAAciB,CAAM,GAEpBF,EAAY,MACR,2EACJG,EAAS,KAAKH,CAAW,EAEhC,OAAQI,EAAO,CACZJ,EAAY,MACR,mEACJG,EAAS,KAAKH,CAAW,EACzB,QAAQ,MAAM,eAAgBI,CAAK,CAC/C,QAAkB,CACNP,GACH,CACT,MACQG,EAAY,MAAQ,gCACpBG,EAAS,KAAKH,CAAW,EAG7BF,EAAE,OAAO,OACb,CAAC"}